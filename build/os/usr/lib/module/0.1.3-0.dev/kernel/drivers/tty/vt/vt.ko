---@type module_manifest
local manifest = {
    name = "vt",
    version = "0.1.3-0.dev",
    path = "kernel/drivers/tty/vt/vt",
    depends = { "kernel/drivers/tty/tty" }
}

local specials = {
    enter = 28,
    backspace = 14,
}

---@class vt_mod
local vt = {}

function vt.create(id)
    ---@class window
    local window = {
        x = 1,
        y = 1,
        width = 80,
        height = 24,
        scroll = 0,
        buffer = {}
    }
    for i = 1, window.height do
        window.buffer[i] = string.rep(" ", window.width)
    end
    ---@type graphics
    local monitor = require("system.monitor")
    ---@type eventsystem
    local eventsystem = require("system.event")
    ---@type module
    local module = require("system.module")
    ---@type tty_mod
    local tty = module.get("tty")
    ---@type tty
    local _tty = tty.create(id)
    local parentBuffer = window.buffer
    eventsystem.addEventHandler(function(event)
        if event[1] == "key" then

        elseif event[1] == "char" then

        end

        local hasChanges = false
        for index, value in ipairs(window.buffer) do
            if value ~= parentBuffer[index] then
                hasChanges = true
                break
            end
        end

        if hasChanges then
            for index, value in ipairs(window.buffer) do
                monitor.setPosition(1, index - window.scroll)
                monitor.write(string.rep(" ", window.width))
                monitor.setPosition(1, index - window.scroll)
                monitor.write(value)
            end
            parentBuffer = table.deepcopy(window.buffer)
        end
    end)
    ---@class vt
    local obj = {}

    function obj:getTTY()
        return _tty
    end

    function obj:transfer(new_buffer, x, y, width, height)
        window.buffer = new_buffer
        window.x = x
        window.y = y
        window.scroll = 0
        window.width = width
        window.height = height
    end

    function obj:write(...)
        local text = tostring(...)
        for i = 1, #text do
            local char = text:sub(i, i)

            if char == "\n" then
                window.y = window.y + 1
                window.x = 1

                if window.y > window.height then
                    self:scroll()
                    window.y = window.height
                end
            else
                local currentLine = window.buffer[window.y] or string.rep(" ", window.width)
                window.buffer[window.y] = currentLine:sub(1, window.x - 1)
                    .. char ..
                    currentLine:sub(window.x + 1)
                window.x = window.x + 1

                if window.x > window.width then
                    window.x = 1
                    window.y = window.y + 1

                    if window.y > window.height then
                        self:scroll()
                        window.y = window.height
                    end
                end
            end
        end
    end

    function obj:scroll()
        window.scroll = window.scroll + 1
    end
    
    function obj:clear()
        for i = 1, window.height do
            window.buffer[i] = string.rep(" ", window.width)
        end
        window.x, window.y = 1, 1
    end

    return obj
end

function init()
    printf("VT Init called")
end

return vt, init, manifest
