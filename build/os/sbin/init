---@type process
local process = require("system.process")
---@type system_info
local system = require("system.system")
---@type printUtils
local printutils = require("system.util.print")
---@type module
local module = require("system.module")
---@type stdin
local stdin = require("io.stdin")

local initlog = {}
function initlog.ok(...)
    printutils.colorPrint(" ( &5OK&0 )  ".. tostring(...))
end
function initlog.fail(...)
    printutils.colorPrint(" (&eFAIL&0)  ".. tostring(...))
end
function initlog.warn(...)
    printutils.colorPrint(" (&1WARN&0)  ".. tostring(...))
end
function initlog.log(...)
    printutils.colorPrint("         ".. tostring(...))
end

local initver = "0.1.0"

printf("\n  PrimeInit "..initver.." on "..system.name.."!\n")

initlog.ok("OK")
initlog.fail("FAIL")
initlog.warn("WARN")
initlog.log("LOG")

process.exec("/usr/bin/ls", nil, nil, {"-al"})
process.exec("/usr/bin/ps")

printf("Successfully executed read! result: " .. stdin:read())

while true do
    coroutine.yield()
end