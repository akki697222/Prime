---@type process
local process = require("system.process")
---@type system_info
local system = require("system.system")
---@type module
local module = require("system.module")
---@type stdin
local stdin = require("io.stdin")
---@type stdout
local stdout = require("io.stdout")
---@type eventsystem
local eventsystem = require("system.event")
---@type filesystem
local fs = require("system.filesystem")

local initlog = {}
function initlog.ok(...)
    printf(" ( &5OK&0 )  ".. tostring(...))
end
function initlog.fail(...)
    printf(" (&eFAIL&0)  ".. tostring(...))
end
function initlog.warn(...)
    printf(" (&1WARN&0)  ".. tostring(...))
end
function initlog.log(...)
    printf("         ".. tostring(...))
end

local initver = "0.1.0"

printf("\n  PrimeInit "..initver.." on "..system.name.."!\n")

initlog.ok("OK")
initlog.fail("FAIL")
initlog.warn("WARN")
initlog.log("LOG")

printf(fs.cwd())
fs.chdir("/usr/bin")
printf(fs.cwd())

initlog.log("Run /usr/bin/sh :")
process.exec("/usr/bin/sh")

while true do
    coroutine.yield()
end